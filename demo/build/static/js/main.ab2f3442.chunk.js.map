{"version":3,"sources":["constants.js","components/Card/index.js","components/Card/Card.js","components/Header/index.js","components/Header/Header.js","components/Pagination/index.js","components/Pagination/Pagination.js","components/UserCard/UserCard.js","components/UserCard/index.js","pages/Results/Results.js","pages/Results/index.js","pages/App/App.js","pages/App/index.js","index.js"],"names":["NGROK_ADDRESS","LANGUAGE_ICONS","JavaScript","TypeScript","Python","UNK","Go","Rust","Java","C","Shell","Ruby","HTML","Vue","PHP","Swift","CSS","Dart","Haskell","PowerShell","Elixir","Lua","SCSS","Clojure","Batchfile","Scala","Nix","Crystal","Kotlin","CMake","Groovy","Markdown","OCaml","Nunjucks","Blade","V","Nim","Dockerfile","Roff","Assembly","Julia","Zig","WebAssembly","FreeMarker","Makefile","MONTHS","Card","React","forwardRef","ref","name","creator","about","stars","forks","language","sponsor","updated","active","props","className","classNames","Body","Title","href","target","rel","onClick","e","stopPropagation","Text","icon","Footer","getDate","getMonth","getFullYear","color","Header","to","style","textDecoration","Button","variant","Pagination","page","setPage","size","minPage","Math","max","maxPage","min","Container","Prev","prev","disabled","Item","Ellipsis","Array","from","length","slice","map","_","index","Next","AVATAR_ICONS","UserCard","userId","numStarredRepos","width","height","ResultsSection","title","data","children","useState","Row","ceil","Results","location","useLocation","predicting","setPredicting","previouslyStarred","setPreviouslyStarred","predictions","setPredictions","groundTruth","setGroundTruth","useEffect","console","log","state","a","fetch","method","body","JSON","stringify","headers","response","json","predict","then","starred","repo","repoId","Date","gt","src","repoInfo","sort","b","score","OverlayTrigger","placement","overlay","Tooltip","toFixed","Object","values","find","pred","Home","model","setModel","K","setK","selectedModel","onModelSelect","numberOfRepos","onNumberOfRepos","PredictionFromRepos","history","useHistory","selectedRepos","setSelectedRepos","repos","setRepos","filterRepoId","setFilterRepoId","filterCreator","setFilterCreator","filterName","setFilterName","filterKeyword","setFilterKeyword","filterLanguage","setFilterLanguage","showAlert","setShowAlert","alertContent","setAlertContent","fetchRepos","filteredRepos","useMemo","filter","parseInt","toLowerCase","includes","pages","Modal","show","onHide","pathname","params","starred_repos_list","r","push","Form","Control","type","placeholder","value","onChange","currentTarget","flex","Select","keys","Badge","pill","unselectRepo","cursor","Spinner","animation","selectRepo","PredictionFromUser","users","setUsers","filterUserId","setFilterUserId","fetchUsers","filteredUsers","user_id","predictFromUser","Settings","App","path","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ab2f3442.chunk.js","sourcesContent":["export const NGROK_ADDRESS = \"https://a27f-35-237-124-108.ngrok.io\";\r\n\r\nexport const LANGUAGE_ICONS = {\r\n  JavaScript: \"grommet-icons:js\",\r\n  TypeScript: \"logos:typescript-icon\",\r\n  Python: \"logos:python\",\r\n  UNK: \"noto:disguised-face\",\r\n  Go: \"logos:go\",\r\n  \"C++\": \"logos:c-plusplus\",\r\n  Rust: \"logos:rust\",\r\n  Java: \"logos:java\",\r\n  C: \"logos:c\",\r\n  Shell: \"vscode-icons:file-type-powershell\",\r\n  Ruby: \"logos:ruby\",\r\n  HTML: \"logos:html-5\",\r\n  Vue: \"logos:vue\",\r\n  \"C#\": \"logos:c-sharp\",\r\n  PHP: \"logos:php\",\r\n  Swift: \"logos:swift\",\r\n  CSS: \"logos:css-3\",\r\n  \"Jupyter Notebook\": \"logos:jupyter\",\r\n  \"Vim script\": \"logos:vim\",\r\n  Dart: \"logos:dart\",\r\n  Haskell: \"logos:haskell-icon\",\r\n  PowerShell: \"vscode-icons:file-type-powershell\",\r\n  Elixir: \"vscode-icons:file-type-elixir\",\r\n  Lua: \"logos:lua\",\r\n  SCSS: \"vscode-icons:file-type-scss2\",\r\n  \"Emacs Lisp\": \"vscode-icons:file-type-emacs\",\r\n  Clojure: \"logos:clojure\",\r\n  Batchfile: \"logos:batch\",\r\n  Scala: \"logos:scala\",\r\n  Nix: \"vscode-icons:file-type-nix\",\r\n  Crystal: \"logos:crystal\",\r\n  Kotlin: \"logos:kotlin\",\r\n  CMake: \"vscode-icons:file-type-cmake\",\r\n  Groovy: \"vscode-icons:file-type-groovy\",\r\n  Markdown: \"logos:md\",\r\n  OCaml: \"vscode-icons:file-type-ocaml\",\r\n  Nunjucks: \"vscode-icons:file-type-nunjucks\",\r\n  \"Objective-C\": \"vscode-icons:file-type-objectivec\",\r\n  Blade: \"vscode-icons:file-type-blade\",\r\n  V: \"file-icons:v\",\r\n  Nim: \"vscode-icons:file-type-nim\",\r\n  Dockerfile: \"logos:docker-icon\",\r\n  Roff: \"akar-icons:file\",\r\n  Assembly: \"vscode-icons:file-type-assembly\",\r\n  Julia: \"vscode-icons:file-type-julia\",\r\n  Zig: \"vscode-icons:file-type-zig\",\r\n  WebAssembly: \"logos:webassembly\",\r\n  FreeMarker: \"vscode-icons:file-type-freemarker\",\r\n  Makefile: \"vscode-icons:file-type-makefile\",\r\n};\r\n\r\nexport const MONTHS = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n","import Card from \"./Card\";\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport BootstrapCard from \"react-bootstrap/Card\";\r\nimport { Icon } from \"@iconify/react\";\r\n\r\nimport { MONTHS, LANGUAGE_ICONS } from \"../../constants\";\r\n\r\nimport \"./Card.scss\";\r\n\r\nconst Card = React.forwardRef(\r\n  (\r\n    {\r\n      name,\r\n      creator,\r\n      about,\r\n      stars,\r\n      forks,\r\n      language,\r\n      sponsor,\r\n      updated,\r\n      active,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <BootstrapCard\r\n        className={classNames(\"m-2\", { active })}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        <BootstrapCard.Body className=\"d-flex flex-column\">\r\n          <BootstrapCard.Title>\r\n            <a\r\n              href={`https://github.com/${creator}/${name}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              {creator} / {name}\r\n            </a>\r\n          </BootstrapCard.Title>\r\n          <BootstrapCard.Text className=\"mb-4 flex-grow-1\">\r\n            {about}\r\n          </BootstrapCard.Text>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <Icon icon=\"ant-design:star-outlined\" className=\"me-2\" />\r\n              {stars}\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <Icon icon=\"eos-icons:fork-outlined\" className=\"me-2\" />\r\n              {forks}\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <Icon icon={LANGUAGE_ICONS[language]} className=\"me-2\" />\r\n              {language !== \"UNK\" ? language : \"Unknown\"}\r\n            </div>\r\n          </div>\r\n        </BootstrapCard.Body>\r\n        <BootstrapCard.Footer\r\n          className={classNames(\"d-flex align-items-center text-center\", {\r\n            \"justify-content-between\": sponsor,\r\n          })}\r\n        >\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <Icon icon=\"bi:calendar-date\" className=\"me-2\" />\r\n            {`${updated.getDate()} ${\r\n              MONTHS[updated.getMonth()]\r\n            } ${updated.getFullYear()}`}\r\n          </div>\r\n          {sponsor && (\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <Icon\r\n                icon=\"simple-icons:githubsponsors\"\r\n                color=\"#db61a2\"\r\n                className=\"me-2\"\r\n              />\r\n              Sponsored\r\n            </div>\r\n          )}\r\n        </BootstrapCard.Footer>\r\n      </BootstrapCard>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Card;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Icon } from \"@iconify/react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"d-flex align-items-center justify-content-between\">\r\n      <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n        <div className=\"d-flex\">\r\n          <Icon icon=\"akar-icons:github-fill\" />\r\n          <div>\r\n            <h1 className=\"m-0\">GitHub Recommender System</h1>\r\n            <h3 className=\"m-0\">Big Data Project 2020/21</h3>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <Button variant=\"green\">Project repo</Button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Pagination from \"./Pagination\";\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport BSPagination from \"react-bootstrap/Pagination\";\r\n\r\nimport \"./Pagination.scss\";\r\n\r\nconst Pagination = ({ page, setPage, size }) => {\r\n  const minPage = Math.max(0, page - 3);\r\n  const maxPage = Math.min(page + 2, size);\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center mt-4\">\r\n      <BSPagination size=\"sm\" className=\"mb-0\">\r\n        <BSPagination.Prev\r\n          onClick={() => setPage((prev) => prev - 1)}\r\n          disabled={page === 1}\r\n        >\r\n          Previous\r\n        </BSPagination.Prev>\r\n\r\n        {minPage !== 0 && (\r\n          <>\r\n            <BSPagination.Item onClick={() => setPage(1)}>1</BSPagination.Item>\r\n            {minPage > 1 && <BSPagination.Ellipsis />}\r\n          </>\r\n        )}\r\n\r\n        {Array.from({\r\n          length: size,\r\n        })\r\n          .slice(minPage, maxPage)\r\n          .map((_, index) => (\r\n            <BSPagination.Item\r\n              key={index + minPage + 1}\r\n              active={index + minPage + 1 === page}\r\n              onClick={() => setPage(index + minPage + 1)}\r\n            >\r\n              {index + minPage + 1}\r\n            </BSPagination.Item>\r\n          ))}\r\n\r\n        {maxPage !== size && (\r\n          <>\r\n            {maxPage < size - 1 && <BSPagination.Ellipsis />}\r\n            <BSPagination.Item onClick={() => setPage(size)}>\r\n              {size}\r\n            </BSPagination.Item>\r\n          </>\r\n        )}\r\n\r\n        <BSPagination.Next\r\n          onClick={() => setPage((prev) => prev + 1)}\r\n          disabled={page === size}\r\n        >\r\n          Next\r\n        </BSPagination.Next>\r\n      </BSPagination>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nimport { Icon } from \"@iconify/react\";\r\n\r\nimport \"./UserCard.scss\";\r\n\r\nconst AVATAR_ICONS = [\r\n  \"emojione:blond-haired-person\",\r\n  \"emojione:blond-haired-person-dark-skin-tone\",\r\n  \"emojione:blond-haired-person-light-skin-tone\",\r\n  \"emojione:blond-haired-person-medium-dark-skin-tone\",\r\n  \"emojione:blond-haired-person-medium-light-skin-tone\",\r\n  \"emojione:blond-haired-person-medium-skin-tone\"\r\n];\r\n\r\nconst UserCard = ({ userId, name, numStarredRepos, ...props }) => {\r\n  return (\r\n    <div {...props} className=\"d-flex m-2 p-2 user-card\">\r\n      <Icon\r\n        icon={AVATAR_ICONS[userId % AVATAR_ICONS.length]}\r\n        width=\"30px\"\r\n        height=\"30px\"\r\n      />\r\n      <div className=\"px-2\">\r\n        <h1 className=\"m-0 no-wrap\">{name}</h1>\r\n        <h2 className=\"m-0\">Starred {numStarredRepos} repos</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import UserCard from \"./UserCard\";\r\n\r\nexport default UserCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\nimport Card from \"../../components/Card\";\r\nimport Header from \"../../components/Header\";\r\nimport Pagination from \"../../components/Pagination\";\r\n\r\nimport { NGROK_ADDRESS } from \"../../constants\";\r\n\r\nimport \"./Results.scss\";\r\n\r\nconst ITEM_PER_PAGE = 5;\r\n\r\nconst Results = () => {\r\n  const location = useLocation();\r\n\r\n  const [predicting, setPredicting] = useState(true);\r\n\r\n  const [previouslyStarred, setPreviouslyStarred] = useState();\r\n  const [predictions, setPredictions] = useState();\r\n  const [groundTruth, setGroundTruth] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(location.state);\r\n\r\n    const predict = async () => {\r\n      const response = await fetch(`${NGROK_ADDRESS}/recommend`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(location.state),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      return await response.json();\r\n    };\r\n\r\n    predict().then((data) => {\r\n      console.log(data);\r\n      setPreviouslyStarred(\r\n        data.starred.map((repo) => ({\r\n          ...repo,\r\n          repoId: repo[\"repo_id\"],\r\n          sponsor: repo.sponsor === 1,\r\n          updated: new Date(repo.updated),\r\n        }))\r\n      );\r\n      setPredictions(\r\n        data.predictions.map((repo) => ({\r\n          ...repo,\r\n          repoId: repo[\"repo_id\"],\r\n          sponsor: repo.sponsor === 1,\r\n          updated: new Date(repo.updated),\r\n        }))\r\n      );\r\n      if (data.gt)\r\n        setGroundTruth(\r\n          data.gt.map((repo) => ({\r\n            ...repo,\r\n            repoId: repo[\"repo_id\"],\r\n            sponsor: repo.sponsor === 1,\r\n            updated: new Date(repo.updated),\r\n          }))\r\n        );\r\n      setPredicting(false);\r\n    });\r\n  }, []);\r\n\r\n  if (predicting)\r\n    return (\r\n      <div className=\"d-flex flex-column justify-content-center align-items-center w-100 mt-4 results\">\r\n        <h1>Predicting...</h1>\r\n        <img\r\n          className=\"mt-2\"\r\n          src=\"https://c.tenor.com/mPZu033P8GAAAAAC/the-hang-over-zach-galifianakis.gif\"\r\n        />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"results\">\r\n      <Header />\r\n      <div className=\"p-2\">\r\n        {previouslyStarred && (\r\n          <ResultsSection title=\"Previously Starred\" data={previouslyStarred}>\r\n            {({ repoId, ...repoInfo }) => <Card key={repoId} {...repoInfo} />}\r\n          </ResultsSection>\r\n        )}\r\n        {predictions && (\r\n          <ResultsSection\r\n            title=\"Predictions\"\r\n            data={predictions.sort((a, b) => b.score - a.score)}\r\n          >\r\n            {({ repoId, score, ...repoInfo }) => (\r\n              <OverlayTrigger\r\n                key={repoId}\r\n                placement=\"top\"\r\n                overlay={<Tooltip>Score: {score.toFixed(3)}</Tooltip>}\r\n              >\r\n                <Card\r\n                  {...repoInfo}\r\n                  active={\r\n                    groundTruth &&\r\n                    Object.values(groundTruth).find(\r\n                      (gt) => gt.repoId === repoId\r\n                    )\r\n                  }\r\n                />\r\n              </OverlayTrigger>\r\n            )}\r\n          </ResultsSection>\r\n        )}\r\n        {groundTruth && (\r\n          <ResultsSection title=\"Ground Truth\" data={groundTruth}>\r\n            {({ repoId, ...repoInfo }) => (\r\n              <Card\r\n                key={repoId}\r\n                {...repoInfo}\r\n                active={Object.values(predictions).find(\r\n                  (pred) => pred.repoId === repoId\r\n                )}\r\n              />\r\n            )}\r\n          </ResultsSection>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResultsSection = ({ title, data, children }) => {\r\n  const [page, setPage] = useState(1);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"mt-4\">{title}</h1>\r\n      <Row className=\"mt-2 g-0 items-list\">\r\n        {data\r\n          .slice(\r\n            (page - 1) * ITEM_PER_PAGE,\r\n            (page - 1) * ITEM_PER_PAGE + ITEM_PER_PAGE\r\n          )\r\n          .map(children)}\r\n      </Row>\r\n      {Math.ceil(data.length / ITEM_PER_PAGE) !== 1 && (\r\n        <Pagination\r\n          page={page}\r\n          setPage={setPage}\r\n          size={Math.ceil(data.length / ITEM_PER_PAGE)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import Results from \"./Results\";\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n  useHistory,\n} from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport Card from \"../../components/Card\";\nimport Header from \"../../components/Header\";\nimport Pagination from \"../../components/Pagination\";\nimport UserCard from \"../../components/UserCard\";\n\nimport Results from \"../Results\";\n\nimport { NGROK_ADDRESS, LANGUAGE_ICONS } from \"../../constants\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/recommend\" component={Results} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nconst Home = () => {\n  const [model, setModel] = useState(\"\");\n  const [K, setK] = useState(\"\");\n\n  return (\n    <>\n      <Header />\n      <div className=\"content d-flex\">\n        <div className=\"w-75\">\n          <PredictionFromRepos model={model} K={K} />\n          <PredictionFromUser model={model} K={K} />\n        </div>\n        <div className=\"w-25\">\n          <Settings\n            selectedModel={model}\n            onModelSelect={setModel}\n            numberOfRepos={K}\n            onNumberOfRepos={setK}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst REPOS_PER_PAGE = 8;\n\nconst PredictionFromRepos = ({ model, K }) => {\n  const history = useHistory();\n\n  const [selectedRepos, setSelectedRepos] = useState([]);\n  const [repos, setRepos] = useState(null);\n\n  const [page, setPage] = useState(1);\n\n  const [filterRepoId, setFilterRepoId] = useState(\"\");\n  const [filterCreator, setFilterCreator] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterKeyword, setFilterKeyword] = useState(\"\");\n  const [filterLanguage, setFilterLanguage] = useState(\"\");\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertContent, setAlertContent] = useState(\"\");\n\n  useEffect(() => {\n    const fetchRepos = async () => {\n      const response = await fetch(`${NGROK_ADDRESS}/repos`);\n      const data = await response.json();\n      return data.map((repo) => ({\n        ...repo,\n        repoId: repo[\"repo_id\"],\n        sponsor: repo.sponsor === 1,\n        updated: new Date(repo.updated),\n      }));\n    };\n\n    fetchRepos().then(setRepos);\n  }, []);\n\n  const selectRepo = (repoId) => {\n    setSelectedRepos((prev) => [\n      ...prev,\n      repos.find((repo) => repo.repoId === repoId),\n    ]);\n    setRepos((prev) => prev.filter((repo) => repo.repoId !== repoId));\n  };\n\n  const unselectRepo = (repoId) => {\n    setRepos((prev) => [\n      ...prev,\n      selectedRepos.find((repo) => repo.repoId === repoId),\n    ]);\n    setSelectedRepos((prev) => prev.filter((repo) => repo.repoId !== repoId));\n  };\n\n  const filteredRepos = useMemo(\n    () =>\n      repos &&\n      repos\n        .sort((a, b) => b.stars - a.stars)\n        .filter(\n          ({ repoId }) => !filterRepoId || repoId === parseInt(filterRepoId, 10)\n        )\n        .filter(\n          ({ creator }) =>\n            !filterCreator ||\n            creator.toLowerCase().includes(filterCreator.toLowerCase())\n        )\n        .filter(\n          ({ name }) =>\n            !filterName || name.toLowerCase().includes(filterName.toLowerCase())\n        )\n        .filter(\n          ({ about }) =>\n            !filterKeyword ||\n            about.toLowerCase().includes(filterKeyword.toLowerCase())\n        )\n        .filter(\n          ({ language }) =>\n            !filterLanguage ||\n            filterLanguage === \"All languages\" ||\n            language === filterLanguage\n        ),\n    [\n      repos,\n      filterRepoId,\n      filterCreator,\n      filterName,\n      filterKeyword,\n      filterLanguage,\n    ]\n  );\n\n  useEffect(() => {\n    if (filteredRepos)\n      setPage((prev) => {\n        const pages = Math.ceil(filteredRepos.length / REPOS_PER_PAGE);\n        const size = Math.max(1, pages);\n        return Math.min(size, prev);\n      });\n  }, [filteredRepos, page]);\n\n  const predictFromRepos = () => {\n    if (selectedRepos.length === 0) {\n      setAlertContent(\"You need to select at least one repo\");\n      setShowAlert(true);\n      return;\n    }\n\n    if (model === \"\") {\n      setAlertContent(\"You need to select a model\");\n      setShowAlert(true);\n      return;\n    }\n\n    if (K === \"\") {\n      setAlertContent(\"You need to indicate the number of repos to recommend\");\n      setShowAlert(true);\n      return;\n    }\n\n    const to = {\n      pathname: `/recommend`,\n      state: {\n        model,\n        params: {\n          starred_repos_list: selectedRepos.map((r) => r.repoId),\n          K: parseInt(K),\n        },\n      },\n    };\n    history.push(to);\n  };\n\n  return (\n    <div className=\"p-4 prediction from-repos\">\n      <Modal show={showAlert} onHide={() => setShowAlert(false)}>\n        <Modal.Header>\n          <Modal.Title className=\"m-auto fw-bold\">Error</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{alertContent}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => setShowAlert(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"d-flex justify-content-between align-items-center header\">\n        <div>\n          <h1 className=\"m-0\">Predict from starred repos</h1>\n          <p>Select the repos you want...</p>\n        </div>\n        <div>\n          <Button variant=\"green\" onClick={predictFromRepos}>\n            Predict\n          </Button>\n        </div>\n      </div>\n      <Form className=\"d-flex\">\n        <Form.Control\n          className=\"me-2\"\n          type=\"text\"\n          placeholder=\"Repo id\"\n          value={filterRepoId}\n          onChange={(e) => setFilterRepoId(e.currentTarget.value)}\n          style={{ flex: 1 }}\n        />\n        <Form.Control\n          className=\"me-2\"\n          type=\"text\"\n          placeholder=\"Creator\"\n          value={filterCreator}\n          onChange={(e) => setFilterCreator(e.currentTarget.value)}\n          style={{ flex: 2 }}\n        />\n        <Form.Control\n          className=\"me-2\"\n          type=\"text\"\n          placeholder=\"Name\"\n          value={filterName}\n          onChange={(e) => setFilterName(e.currentTarget.value)}\n          style={{ flex: 2 }}\n        />\n        <Form.Control\n          className=\"me-2\"\n          type=\"text\"\n          placeholder=\"Keyword\"\n          value={filterKeyword}\n          onChange={(e) => setFilterKeyword(e.currentTarget.value)}\n          style={{ flex: 3 }}\n        />\n        <Form.Select\n          value={filterLanguage}\n          onChange={(e) => setFilterLanguage(e.currentTarget.value)}\n          style={{ flex: 2 }}\n        >\n          <option>All languages</option>\n          {Object.keys(LANGUAGE_ICONS).map((language) => (\n            <option key={language} value={language}>\n              {language}\n            </option>\n          ))}\n        </Form.Select>\n      </Form>\n      {selectedRepos &&\n        selectedRepos.map(({ repoId, creator, name }) => (\n          <Badge\n            key={repoId}\n            className=\"mx-1 mb-2 mt-3\"\n            pill\n            onClick={() => unselectRepo(repoId)}\n            style={{ cursor: \"pointer\" }}\n          >\n            {creator + \" / \" + name}\n          </Badge>\n        ))}\n      <Row\n        className={classNames(\"mt-2 g-0 items-list\", {\n          \"justify-content-center align-items-center\": !repos,\n        })}\n      >\n        {!repos && <Spinner animation=\"grow\" />}\n        {repos &&\n          filteredRepos\n            .slice(\n              (page - 1) * REPOS_PER_PAGE,\n              (page - 1) * REPOS_PER_PAGE + REPOS_PER_PAGE\n            )\n            .map(({ repoId, ...repoInfo }) => (\n              <Card\n                key={repoId}\n                {...repoInfo}\n                onClick={() => selectRepo(repoId)}\n              />\n            ))}\n        {repos && filteredRepos.length === 0 && (\n          <p className=\"mt-4 text-center\">No results</p>\n        )}\n      </Row>\n      {repos && (\n        <Pagination\n          page={page}\n          setPage={setPage}\n          size={Math.ceil(filteredRepos.length / REPOS_PER_PAGE)}\n        />\n      )}\n    </div>\n  );\n};\n\nconst USERS_PER_PAGE = 40;\n\nconst PredictionFromUser = ({ model, K }) => {\n  const history = useHistory();\n\n  const [users, setUsers] = useState(null);\n\n  const [page, setPage] = useState(1);\n\n  const [filterUserId, setFilterUserId] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertContent, setAlertContent] = useState(\"\");\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await fetch(`${NGROK_ADDRESS}/users`);\n      return await response.json();\n    };\n\n    fetchUsers().then(setUsers);\n  }, []);\n\n  const filteredUsers = useMemo(\n    () =>\n      users &&\n      users\n        .sort((a, b) => b.numStarredRepos - a.numStarredRepos)\n        .filter(\n          ({ userId }) => !filterUserId || userId === parseInt(filterUserId, 10)\n        )\n        .filter(\n          ({ name }) =>\n            !filterName || name.toLowerCase().includes(filterName.toLowerCase())\n        ),\n    [users, filterUserId, filterName]\n  );\n\n  const predictFromUser = (userId) => {\n    if (model === \"\") {\n      setAlertContent(\"You need to select a model\");\n      setShowAlert(true);\n      return;\n    }\n\n    if (K === \"\") {\n      setAlertContent(\"You need to indicate the number of repos to recommend\");\n      setShowAlert(true);\n      return;\n    }\n\n    const to = {\n      pathname: `/recommend`,\n      state: { model, params: { user_id: userId, K: parseInt(K) } },\n    };\n    history.push(to);\n  };\n\n  useEffect(() => {\n    if (filteredUsers)\n      setPage((prev) => {\n        const pages = Math.ceil(filteredUsers.length / REPOS_PER_PAGE);\n        const size = Math.max(1, pages);\n        return Math.min(size, prev);\n      });\n  }, [filteredUsers, page]);\n\n  return (\n    <div className=\"p-4 prediction from-user\">\n      <Modal show={showAlert} onHide={() => setShowAlert(false)}>\n        <Modal.Header>\n          <Modal.Title className=\"m-auto fw-bold\">Error</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{alertContent}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => setShowAlert(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"header\">\n        <h1 className=\"m-0\">Predict from user</h1>\n        <p>Select the user you want...</p>\n      </div>\n      <Form className=\"d-flex\">\n        <Form.Control\n          className=\"me-2\"\n          type=\"text\"\n          placeholder=\"User id\"\n          value={filterUserId}\n          onChange={(e) => setFilterUserId(e.currentTarget.value)}\n        />\n        <Form.Control\n          className=\"me-2\"\n          type=\"text\"\n          placeholder=\"Name\"\n          value={filterName}\n          onChange={(e) => setFilterName(e.currentTarget.value)}\n        />\n      </Form>\n      <Row\n        className={classNames(\"mt-2 g-0 items-list\", {\n          \"justify-content-center align-items-center\": !users,\n        })}\n      >\n        {!users && <Spinner animation=\"grow\" />}\n        {filteredUsers &&\n          filteredUsers\n            .slice(\n              (page - 1) * USERS_PER_PAGE,\n              (page - 1) * USERS_PER_PAGE + USERS_PER_PAGE\n            )\n            .map(({ userId, name, numStarredRepos }) => (\n              <UserCard\n                key={userId}\n                userId={userId}\n                name={name}\n                numStarredRepos={numStarredRepos}\n                onClick={() => predictFromUser(userId)}\n              />\n            ))}\n        {users && filteredUsers.length === 0 && (\n          <p className=\"mt-4 text-center\">No results</p>\n        )}\n      </Row>\n      {users && (\n        <Pagination\n          page={page}\n          setPage={setPage}\n          size={Math.ceil(filteredUsers.length / REPOS_PER_PAGE)}\n        />\n      )}\n    </div>\n  );\n};\n\nconst Settings = ({\n  selectedModel,\n  onModelSelect,\n  numberOfRepos,\n  onNumberOfRepos,\n}) => {\n  return (\n    <div className=\"p-4 settings\">\n      <div className=\"header mb-3\">\n        <h1>Settings</h1>\n      </div>\n      <Form>\n        <Form.Select\n          className=\"my-2\"\n          value={selectedModel}\n          onChange={(e) => onModelSelect(e.currentTarget.value)}\n        >\n          <option value=\"\">Select model</option>\n          <option value=\"CB\">Content-based Filtering</option>\n          <option value=\"UB\">User-based Collaborative Filtering</option>\n          <option value=\"IB\">Item-based Collaborative Filtering</option>\n          <option value=\"MF\">Matrix Factorization (ALS)</option>\n        </Form.Select>\n        <Form.Control\n          className=\"my-2\"\n          value={numberOfRepos}\n          onChange={(e) => onNumberOfRepos(e.currentTarget.value)}\n          type=\"number\"\n          placeholder=\"Number of recommended repos\"\n        />\n      </Form>\n      <div className=\"header mt-4 mb-3\">\n        <h1>Statistics</h1>\n      </div>\n      <p>...Bunch of statistics...</p>\n    </div>\n  );\n};\n\nexport default App;\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./pages/App\";\n\nimport \"./style.scss\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}